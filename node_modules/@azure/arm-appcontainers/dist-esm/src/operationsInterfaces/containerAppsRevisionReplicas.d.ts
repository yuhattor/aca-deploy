import { ContainerAppsRevisionReplicasGetReplicaOptionalParams, ContainerAppsRevisionReplicasGetReplicaResponse, ContainerAppsRevisionReplicasListReplicasOptionalParams, ContainerAppsRevisionReplicasListReplicasResponse } from "../models";
/** Interface representing a ContainerAppsRevisionReplicas. */
export interface ContainerAppsRevisionReplicas {
    /**
     * Get a replica for a Container App Revision.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param containerAppName Name of the Container App.
     * @param revisionName Name of the Container App Revision.
     * @param replicaName Name of the Container App Revision Replica.
     * @param options The options parameters.
     */
    getReplica(resourceGroupName: string, containerAppName: string, revisionName: string, replicaName: string, options?: ContainerAppsRevisionReplicasGetReplicaOptionalParams): Promise<ContainerAppsRevisionReplicasGetReplicaResponse>;
    /**
     * List replicas for a Container App Revision.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param containerAppName Name of the Container App.
     * @param revisionName Name of the Container App Revision.
     * @param options The options parameters.
     */
    listReplicas(resourceGroupName: string, containerAppName: string, revisionName: string, options?: ContainerAppsRevisionReplicasListReplicasOptionalParams): Promise<ContainerAppsRevisionReplicasListReplicasResponse>;
}
//# sourceMappingURL=containerAppsRevisionReplicas.d.ts.map