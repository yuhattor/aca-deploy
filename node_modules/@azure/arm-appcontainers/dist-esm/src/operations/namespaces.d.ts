import { Namespaces } from "../operationsInterfaces";
import { ContainerAppsAPIClient } from "../containerAppsAPIClient";
import { CheckNameAvailabilityRequest, NamespacesCheckNameAvailabilityOptionalParams, NamespacesCheckNameAvailabilityResponse } from "../models";
/** Class containing Namespaces operations. */
export declare class NamespacesImpl implements Namespaces {
    private readonly client;
    /**
     * Initialize a new instance of the class Namespaces class.
     * @param client Reference to the service client
     */
    constructor(client: ContainerAppsAPIClient);
    /**
     * Checks if resource name is available.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param environmentName Name of the Managed Environment.
     * @param checkNameAvailabilityRequest The check name availability request.
     * @param options The options parameters.
     */
    checkNameAvailability(resourceGroupName: string, environmentName: string, checkNameAvailabilityRequest: CheckNameAvailabilityRequest, options?: NamespacesCheckNameAvailabilityOptionalParams): Promise<NamespacesCheckNameAvailabilityResponse>;
}
//# sourceMappingURL=namespaces.d.ts.map