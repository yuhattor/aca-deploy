import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { ContainerAppsSourceControls } from "../operationsInterfaces";
import { ContainerAppsAPIClient } from "../containerAppsAPIClient";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import { SourceControl, ContainerAppsSourceControlsListByContainerAppOptionalParams, ContainerAppsSourceControlsGetOptionalParams, ContainerAppsSourceControlsGetResponse, ContainerAppsSourceControlsCreateOrUpdateOptionalParams, ContainerAppsSourceControlsCreateOrUpdateResponse, ContainerAppsSourceControlsDeleteOptionalParams } from "../models";
/** Class containing ContainerAppsSourceControls operations. */
export declare class ContainerAppsSourceControlsImpl implements ContainerAppsSourceControls {
    private readonly client;
    /**
     * Initialize a new instance of the class ContainerAppsSourceControls class.
     * @param client Reference to the service client
     */
    constructor(client: ContainerAppsAPIClient);
    /**
     * Get the Container App SourceControls in a given resource group.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param containerAppName Name of the Container App.
     * @param options The options parameters.
     */
    listByContainerApp(resourceGroupName: string, containerAppName: string, options?: ContainerAppsSourceControlsListByContainerAppOptionalParams): PagedAsyncIterableIterator<SourceControl>;
    private listByContainerAppPagingPage;
    private listByContainerAppPagingAll;
    /**
     * Get the Container App SourceControls in a given resource group.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param containerAppName Name of the Container App.
     * @param options The options parameters.
     */
    private _listByContainerApp;
    /**
     * Get a SourceControl of a Container App.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param containerAppName Name of the Container App.
     * @param sourceControlName Name of the Container App SourceControl.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, containerAppName: string, sourceControlName: string, options?: ContainerAppsSourceControlsGetOptionalParams): Promise<ContainerAppsSourceControlsGetResponse>;
    /**
     * Create or update the SourceControl for a Container App.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param containerAppName Name of the Container App.
     * @param sourceControlName Name of the Container App SourceControl.
     * @param sourceControlEnvelope Properties used to create a Container App SourceControl
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, containerAppName: string, sourceControlName: string, sourceControlEnvelope: SourceControl, options?: ContainerAppsSourceControlsCreateOrUpdateOptionalParams): Promise<PollerLike<PollOperationState<ContainerAppsSourceControlsCreateOrUpdateResponse>, ContainerAppsSourceControlsCreateOrUpdateResponse>>;
    /**
     * Create or update the SourceControl for a Container App.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param containerAppName Name of the Container App.
     * @param sourceControlName Name of the Container App SourceControl.
     * @param sourceControlEnvelope Properties used to create a Container App SourceControl
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, containerAppName: string, sourceControlName: string, sourceControlEnvelope: SourceControl, options?: ContainerAppsSourceControlsCreateOrUpdateOptionalParams): Promise<ContainerAppsSourceControlsCreateOrUpdateResponse>;
    /**
     * Delete a Container App SourceControl.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param containerAppName Name of the Container App.
     * @param sourceControlName Name of the Container App SourceControl.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, containerAppName: string, sourceControlName: string, options?: ContainerAppsSourceControlsDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Delete a Container App SourceControl.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param containerAppName Name of the Container App.
     * @param sourceControlName Name of the Container App SourceControl.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, containerAppName: string, sourceControlName: string, options?: ContainerAppsSourceControlsDeleteOptionalParams): Promise<void>;
    /**
     * ListByContainerAppNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param containerAppName Name of the Container App.
     * @param nextLink The nextLink from the previous successful call to the ListByContainerApp method.
     * @param options The options parameters.
     */
    private _listByContainerAppNext;
}
//# sourceMappingURL=containerAppsSourceControls.d.ts.map