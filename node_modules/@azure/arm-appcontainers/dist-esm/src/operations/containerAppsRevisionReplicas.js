/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
/** Class containing ContainerAppsRevisionReplicas operations. */
export class ContainerAppsRevisionReplicasImpl {
    /**
     * Initialize a new instance of the class ContainerAppsRevisionReplicas class.
     * @param client Reference to the service client
     */
    constructor(client) {
        this.client = client;
    }
    /**
     * Get a replica for a Container App Revision.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param containerAppName Name of the Container App.
     * @param revisionName Name of the Container App Revision.
     * @param replicaName Name of the Container App Revision Replica.
     * @param options The options parameters.
     */
    getReplica(resourceGroupName, containerAppName, revisionName, replicaName, options) {
        return this.client.sendOperationRequest({
            resourceGroupName,
            containerAppName,
            revisionName,
            replicaName,
            options
        }, getReplicaOperationSpec);
    }
    /**
     * List replicas for a Container App Revision.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param containerAppName Name of the Container App.
     * @param revisionName Name of the Container App Revision.
     * @param options The options parameters.
     */
    listReplicas(resourceGroupName, containerAppName, revisionName, options) {
        return this.client.sendOperationRequest({ resourceGroupName, containerAppName, revisionName, options }, listReplicasOperationSpec);
    }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);
const getReplicaOperationSpec = {
    path: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/revisions/{revisionName}/replicas/{replicaName}",
    httpMethod: "GET",
    responses: {
        200: {
            bodyMapper: Mappers.Replica
        },
        default: {
            bodyMapper: Mappers.DefaultErrorResponse
        }
    },
    queryParameters: [Parameters.apiVersion],
    urlParameters: [
        Parameters.$host,
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.containerAppName,
        Parameters.revisionName,
        Parameters.replicaName
    ],
    headerParameters: [Parameters.accept],
    serializer
};
const listReplicasOperationSpec = {
    path: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/revisions/{revisionName}/replicas",
    httpMethod: "GET",
    responses: {
        200: {
            bodyMapper: Mappers.ReplicaCollection
        },
        default: {
            bodyMapper: Mappers.DefaultErrorResponse
        }
    },
    queryParameters: [Parameters.apiVersion],
    urlParameters: [
        Parameters.$host,
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.containerAppName,
        Parameters.revisionName
    ],
    headerParameters: [Parameters.accept],
    serializer
};
//# sourceMappingURL=containerAppsRevisionReplicas.js.map