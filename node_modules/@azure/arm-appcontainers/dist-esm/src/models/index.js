/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
/** Known values of {@link CreatedByType} that the service accepts. */
export var KnownCreatedByType;
(function (KnownCreatedByType) {
    /** User */
    KnownCreatedByType["User"] = "User";
    /** Application */
    KnownCreatedByType["Application"] = "Application";
    /** ManagedIdentity */
    KnownCreatedByType["ManagedIdentity"] = "ManagedIdentity";
    /** Key */
    KnownCreatedByType["Key"] = "Key";
})(KnownCreatedByType || (KnownCreatedByType = {}));
/** Known values of {@link ManagedServiceIdentityType} that the service accepts. */
export var KnownManagedServiceIdentityType;
(function (KnownManagedServiceIdentityType) {
    /** None */
    KnownManagedServiceIdentityType["None"] = "None";
    /** SystemAssigned */
    KnownManagedServiceIdentityType["SystemAssigned"] = "SystemAssigned";
    /** UserAssigned */
    KnownManagedServiceIdentityType["UserAssigned"] = "UserAssigned";
    /** SystemAssignedUserAssigned */
    KnownManagedServiceIdentityType["SystemAssignedUserAssigned"] = "SystemAssigned,UserAssigned";
})(KnownManagedServiceIdentityType || (KnownManagedServiceIdentityType = {}));
/** Known values of {@link ContainerAppProvisioningState} that the service accepts. */
export var KnownContainerAppProvisioningState;
(function (KnownContainerAppProvisioningState) {
    /** InProgress */
    KnownContainerAppProvisioningState["InProgress"] = "InProgress";
    /** Succeeded */
    KnownContainerAppProvisioningState["Succeeded"] = "Succeeded";
    /** Failed */
    KnownContainerAppProvisioningState["Failed"] = "Failed";
    /** Canceled */
    KnownContainerAppProvisioningState["Canceled"] = "Canceled";
})(KnownContainerAppProvisioningState || (KnownContainerAppProvisioningState = {}));
/** Known values of {@link ActiveRevisionsMode} that the service accepts. */
export var KnownActiveRevisionsMode;
(function (KnownActiveRevisionsMode) {
    /** Multiple */
    KnownActiveRevisionsMode["Multiple"] = "Multiple";
    /** Single */
    KnownActiveRevisionsMode["Single"] = "Single";
})(KnownActiveRevisionsMode || (KnownActiveRevisionsMode = {}));
/** Known values of {@link IngressTransportMethod} that the service accepts. */
export var KnownIngressTransportMethod;
(function (KnownIngressTransportMethod) {
    /** Auto */
    KnownIngressTransportMethod["Auto"] = "auto";
    /** Http */
    KnownIngressTransportMethod["Http"] = "http";
    /** Http2 */
    KnownIngressTransportMethod["Http2"] = "http2";
})(KnownIngressTransportMethod || (KnownIngressTransportMethod = {}));
/** Known values of {@link BindingType} that the service accepts. */
export var KnownBindingType;
(function (KnownBindingType) {
    /** Disabled */
    KnownBindingType["Disabled"] = "Disabled";
    /** SniEnabled */
    KnownBindingType["SniEnabled"] = "SniEnabled";
})(KnownBindingType || (KnownBindingType = {}));
/** Known values of {@link AppProtocol} that the service accepts. */
export var KnownAppProtocol;
(function (KnownAppProtocol) {
    /** Http */
    KnownAppProtocol["Http"] = "http";
    /** Grpc */
    KnownAppProtocol["Grpc"] = "grpc";
})(KnownAppProtocol || (KnownAppProtocol = {}));
/** Known values of {@link Scheme} that the service accepts. */
export var KnownScheme;
(function (KnownScheme) {
    /** Http */
    KnownScheme["Http"] = "HTTP";
    /** Https */
    KnownScheme["Https"] = "HTTPS";
})(KnownScheme || (KnownScheme = {}));
/** Known values of {@link Type} that the service accepts. */
export var KnownType;
(function (KnownType) {
    /** Liveness */
    KnownType["Liveness"] = "Liveness";
    /** Readiness */
    KnownType["Readiness"] = "Readiness";
    /** Startup */
    KnownType["Startup"] = "Startup";
})(KnownType || (KnownType = {}));
/** Known values of {@link StorageType} that the service accepts. */
export var KnownStorageType;
(function (KnownStorageType) {
    /** AzureFile */
    KnownStorageType["AzureFile"] = "AzureFile";
    /** EmptyDir */
    KnownStorageType["EmptyDir"] = "EmptyDir";
})(KnownStorageType || (KnownStorageType = {}));
/** Known values of {@link RevisionHealthState} that the service accepts. */
export var KnownRevisionHealthState;
(function (KnownRevisionHealthState) {
    /** Healthy */
    KnownRevisionHealthState["Healthy"] = "Healthy";
    /** Unhealthy */
    KnownRevisionHealthState["Unhealthy"] = "Unhealthy";
    /** None */
    KnownRevisionHealthState["None"] = "None";
})(KnownRevisionHealthState || (KnownRevisionHealthState = {}));
/** Known values of {@link RevisionProvisioningState} that the service accepts. */
export var KnownRevisionProvisioningState;
(function (KnownRevisionProvisioningState) {
    /** Provisioning */
    KnownRevisionProvisioningState["Provisioning"] = "Provisioning";
    /** Provisioned */
    KnownRevisionProvisioningState["Provisioned"] = "Provisioned";
    /** Failed */
    KnownRevisionProvisioningState["Failed"] = "Failed";
    /** Deprovisioning */
    KnownRevisionProvisioningState["Deprovisioning"] = "Deprovisioning";
    /** Deprovisioned */
    KnownRevisionProvisioningState["Deprovisioned"] = "Deprovisioned";
})(KnownRevisionProvisioningState || (KnownRevisionProvisioningState = {}));
/** Known values of {@link EnvironmentProvisioningState} that the service accepts. */
export var KnownEnvironmentProvisioningState;
(function (KnownEnvironmentProvisioningState) {
    /** Succeeded */
    KnownEnvironmentProvisioningState["Succeeded"] = "Succeeded";
    /** Failed */
    KnownEnvironmentProvisioningState["Failed"] = "Failed";
    /** Canceled */
    KnownEnvironmentProvisioningState["Canceled"] = "Canceled";
    /** Waiting */
    KnownEnvironmentProvisioningState["Waiting"] = "Waiting";
    /** InitializationInProgress */
    KnownEnvironmentProvisioningState["InitializationInProgress"] = "InitializationInProgress";
    /** InfrastructureSetupInProgress */
    KnownEnvironmentProvisioningState["InfrastructureSetupInProgress"] = "InfrastructureSetupInProgress";
    /** InfrastructureSetupComplete */
    KnownEnvironmentProvisioningState["InfrastructureSetupComplete"] = "InfrastructureSetupComplete";
    /** ScheduledForDelete */
    KnownEnvironmentProvisioningState["ScheduledForDelete"] = "ScheduledForDelete";
    /** UpgradeRequested */
    KnownEnvironmentProvisioningState["UpgradeRequested"] = "UpgradeRequested";
    /** UpgradeFailed */
    KnownEnvironmentProvisioningState["UpgradeFailed"] = "UpgradeFailed";
})(KnownEnvironmentProvisioningState || (KnownEnvironmentProvisioningState = {}));
/** Known values of {@link CertificateProvisioningState} that the service accepts. */
export var KnownCertificateProvisioningState;
(function (KnownCertificateProvisioningState) {
    /** Succeeded */
    KnownCertificateProvisioningState["Succeeded"] = "Succeeded";
    /** Failed */
    KnownCertificateProvisioningState["Failed"] = "Failed";
    /** Canceled */
    KnownCertificateProvisioningState["Canceled"] = "Canceled";
    /** DeleteFailed */
    KnownCertificateProvisioningState["DeleteFailed"] = "DeleteFailed";
    /** Pending */
    KnownCertificateProvisioningState["Pending"] = "Pending";
})(KnownCertificateProvisioningState || (KnownCertificateProvisioningState = {}));
/** Known values of {@link CheckNameAvailabilityReason} that the service accepts. */
export var KnownCheckNameAvailabilityReason;
(function (KnownCheckNameAvailabilityReason) {
    /** Invalid */
    KnownCheckNameAvailabilityReason["Invalid"] = "Invalid";
    /** AlreadyExists */
    KnownCheckNameAvailabilityReason["AlreadyExists"] = "AlreadyExists";
})(KnownCheckNameAvailabilityReason || (KnownCheckNameAvailabilityReason = {}));
/** Known values of {@link AccessMode} that the service accepts. */
export var KnownAccessMode;
(function (KnownAccessMode) {
    /** ReadOnly */
    KnownAccessMode["ReadOnly"] = "ReadOnly";
    /** ReadWrite */
    KnownAccessMode["ReadWrite"] = "ReadWrite";
})(KnownAccessMode || (KnownAccessMode = {}));
/** Known values of {@link SourceControlOperationState} that the service accepts. */
export var KnownSourceControlOperationState;
(function (KnownSourceControlOperationState) {
    /** InProgress */
    KnownSourceControlOperationState["InProgress"] = "InProgress";
    /** Succeeded */
    KnownSourceControlOperationState["Succeeded"] = "Succeeded";
    /** Failed */
    KnownSourceControlOperationState["Failed"] = "Failed";
    /** Canceled */
    KnownSourceControlOperationState["Canceled"] = "Canceled";
})(KnownSourceControlOperationState || (KnownSourceControlOperationState = {}));
//# sourceMappingURL=index.js.map